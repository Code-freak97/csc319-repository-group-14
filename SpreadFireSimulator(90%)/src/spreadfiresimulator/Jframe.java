/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spreadfiresimulator;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author StaroMoon
 */
public class Jframe extends javax.swing.JFrame {
    double probfire,probtree,probtreeburn;
    static DrawField field;
    Forest forest;
    Burn b;
    EachTree[][] eachtree;
    boolean step = false;
    boolean mousemove = false;
    
    public Jframe() {
        initComponents();
        setTitle("FireSimulator BY GROUP 14");
        
        field = new DrawField();
        forest = new Forest(field);
        add(field);
        b = new Burn();
        b.setGui(this);
        field.setGui(this);
        setResizable(false);
        setVisible(true);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        setprobfire = new javax.swing.JButton();
        createnertreewithprob = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        final int FPS_MAX = 100;
        final int FPS_MIN = 10;
        final int VALUE = 100;
        jSlider1 = new javax.swing.JSlider(JSlider.HORIZONTAL,
            FPS_MIN, FPS_MAX, VALUE);
        jLabel1 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        start = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        final int MAX = 1000;
        final int MIN = 1;
        final int VAL = 100;
        jSlider2 = new javax.swing.JSlider(JSlider.HORIZONTAL,
            MIN,MAX,VAL);
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        setprobfire.setText("setProbfire");
        /*Double a = Double.parseDouble(jTextField1.getText());
        Burn b = new Burn(a);*/
        setprobfire.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                setprobfireMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                setprobfireMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                setprobfireMouseExited(evt);
            }
        });

        createnertreewithprob.setText("createtreewithprob");
        createnertreewithprob.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createnertreewithprobMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                createnertreewithprobMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                createnertreewithprobMouseExited(evt);
            }
        });

        jSlider1.setMajorTickSpacing(10);
        jSlider1.setSnapToTicks(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setPaintLabels(true);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Size : 100*100");

        jRadioButton1.setText("AutoPlay : OFF");
        jRadioButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jRadioButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jRadioButton1MouseExited(evt);
            }
        });
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(153, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("");
        jLabel2.setOpaque(true);

        start.setText("start");
        start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                startMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                startMouseExited(evt);
            }
        });

        reset.setText("reset");
        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                resetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                resetMouseExited(evt);
            }
        });
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Speed : 0.100 second/action");

        jLabel4.setText("ProbTree :");

        jLabel5.setText("ProbTreeBurn :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(start)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton1)
                        .addGap(28, 28, 28)
                        .addComponent(reset)
                        .addGap(53, 53, 53)
                        .addComponent(setprobfire)
                        .addGap(32, 32, 32)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSlider2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(jTextField2))
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(createnertreewithprob)
                        .addGap(110, 110, 110))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(createnertreewithprob)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 317, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setprobfire)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset)
                    .addComponent(jRadioButton1)
                    .addComponent(start))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jSlider1.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                JSlider slider = (JSlider) evt.getSource();
                if (!slider.getValueIsAdjusting()) {
                    int value = slider.getValue();
                    for(int i = 10;i <= 100;i++){
                        if(value == i){
                            jLabel1.setText("Size : " + value+"*"+value);
                            field.setSizecell((double)600/(double)value));
                        //System.out.println(field.getSizecell());
                        field.setNumTree(value);
                        repaint();
                    }
                }
                /*if(value == 10) {

                    //field.setSizecell(600/value);
                    field.setNumTree(value);
                    repaint();

                }else if(value == 20 ){
                    repaint();
                    //field.setSizecell(600/value);
                    field.setNumTree(value);
                }
                else if(value == 30){
                    repaint();
                    //field.setSizecell(20);
                    field.setNumTree(value);
                }
                else if(value == 40) {
                    repaint();
                    field.setSizecell(15);
                }
                else if(value == 50) {
                    repaint();
                    field.setSizecell(12);
                }
                else {
                    repaint();
                }*/

                field.setNumTree(value);
                //add(forest);

                field.repaint();
                //System.out.println(value);
                //JOptionPane.showMessageDialog(null, "Forest with"+ value*value + "Trees");
            }
        }
    });
    /**/
    jSlider2.addChangeListener(new ChangeListener() {
        public void stateChanged(ChangeEvent evt) {
            JSlider slider = (JSlider) evt.getSource();
            if (!slider.getValueIsAdjusting()) {
                int value = slider.getValue();
                b.setSpeed(value);
                if(value < 10){
                    jLabel3.setText("Speed : 0.00" + value + " second/action");
                }else if(value < 100){
                    jLabel3.setText("Speed : 0.0" + value + " second/action");
                }else if(value < 1000){
                    jLabel3.setText("Speed : 0." + value + " second/action");
                }else{
                    jLabel3.setText("Speed : 1.000 second/action");
                }
            }
        }
    }
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMouseClicked
        if(getProbfire() == 0){
            JOptionPane.showMessageDialog(null, "Please insert probfire.");
        }else{
            Thread t = new Thread(){
            public void run(){
                if(step == true){
                    b.run();
                    repaint();
                }else{
                    b.step();
                }
            }
        };
        t.start();
        }
    }//GEN-LAST:event_startMouseClicked

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        if(jRadioButton1.isSelected() == true){
            jRadioButton1.setText("AutoPlay : ON");
            step = true;
        }else{
            jRadioButton1.setText("AutoPlay : OFF");
            step = false;
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void setprobfireMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setprobfireMouseClicked
        probfire = Double.parseDouble(jTextField1.getText());
    }//GEN-LAST:event_setprobfireMouseClicked

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        forest = new Forest(field);
        probfire = 0;
        probtree = 0;
        probtreeburn = 0;
        field.reset();
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        repaint();
    }//GEN-LAST:event_resetActionPerformed
  
    private void createnertreewithprobMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createnertreewithprobMouseClicked
        probtree = Double.parseDouble(jTextField2.getText());
        probtreeburn = Double.parseDouble(jTextField3.getText());
        field.createtreefromprob();
        repaint();
    }//GEN-LAST:event_createnertreewithprobMouseClicked

    private void startMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMouseEntered
        jLabel2.setText("Start Burn Forest");
    }//GEN-LAST:event_startMouseEntered

    private void startMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMouseExited
        jLabel2.setText("");
    }//GEN-LAST:event_startMouseExited

    private void resetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseEntered
        jLabel2.setText("Regrow trees");
    }//GEN-LAST:event_resetMouseEntered

    private void resetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseExited
        jLabel2.setText("");
    }//GEN-LAST:event_resetMouseExited

    private void setprobfireMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setprobfireMouseEntered
        jLabel2.setText("Set probability of spreadfire rate");
    }//GEN-LAST:event_setprobfireMouseEntered

    private void setprobfireMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setprobfireMouseExited
        jLabel2.setText("");
    }//GEN-LAST:event_setprobfireMouseExited

    private void createnertreewithprobMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createnertreewithprobMouseEntered
        jLabel2.setText("Create new forest with probability tree and burn");
    }//GEN-LAST:event_createnertreewithprobMouseEntered

    private void createnertreewithprobMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createnertreewithprobMouseExited
        jLabel2.setText("");
    }//GEN-LAST:event_createnertreewithprobMouseExited

    private void jRadioButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton1MouseEntered
        jLabel2.setText("Select this to make forest automatic burn");
    }//GEN-LAST:event_jRadioButton1MouseEntered

    private void jRadioButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton1MouseExited
        jLabel2.setText("");
    }//GEN-LAST:event_jRadioButton1MouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Jframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createnertreewithprob;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton reset;
    private javax.swing.JButton setprobfire;
    private javax.swing.JButton start;
    // End of variables declaration//GEN-END:variables

    public double getProbtree() {
        return probtree;
    }

    public double getProbtreeburn() {
        return probtreeburn;
    }
    
    public double getProbfire() {
        return probfire;
    }
    
}
