package spreadfiresimulator;

import java.awt.Desktop;
import java.awt.event.ActionListener;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
import javax.swing.Timer;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author csc319 GROUP # 14
 */
public class Jframe extends javax.swing.JFrame {
    private double probfire,probtree,probtreeburn,count = 1;
    private boolean step = false;
    private Timer timer;
    private ImageIcon imgmsgbox = new ImageIcon(getClass().getResource("/Image/msgboxicon.png"));
    DrawField field;
    Forest forest;
    Burn b;
    EachTree[][] eachtree;
    
    public Jframe() {
        initComponents();
        setTitle("FireSimulator BY GROUP 14");
        setSize(1060, 660);
        field = new DrawField();
        forest = new Forest(field);
        add(field);
        b = new Burn();
        b.setGui(this);
        field.setGui(this);
        setResizable(false);
        setVisible(true);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textprobfire = new javax.swing.JTextField();
        textprobtree = new javax.swing.JTextField();
        textprobtreeburn = new javax.swing.JTextField();
        final int FPS_MAX = 100;
        final int FPS_MIN = 10;
        final int VALUE = 100;
        jSlider1 = new javax.swing.JSlider(JSlider.HORIZONTAL,
            FPS_MIN, FPS_MAX, VALUE);
        final int MAX = 1000;
        final int MIN = 1;
        final int VAL = 100;
        jSlider2 = new javax.swing.JSlider(JSlider.HORIZONTAL,
            MIN,MAX,VAL);
        autoplay = new javax.swing.JLabel();
        Start = new javax.swing.JLabel();
        Regrow = new javax.swing.JLabel();
        SetProbFire = new javax.swing.JLabel();
        GrowNewForest = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(textprobfire);
        textprobfire.setBounds(880, 287, 85, 30);
        getContentPane().add(textprobtree);
        textprobtree.setBounds(880, 50, 115, 20);
        getContentPane().add(textprobtreeburn);
        textprobtreeburn.setBounds(880, 93, 115, 20);

        jSlider1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14));
        jSlider1.setMajorTickSpacing(10);
        jSlider1.setSnapToTicks(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setPaintLabels(true);
        jSlider1.setOpaque(false);
        jSlider1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jSlider1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jSlider1MouseExited(evt);
            }
        });
        getContentPane().add(jSlider1);
        jSlider1.setBounds(620, 520, 200, 50);
        jSlider1.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                JSlider slider = (JSlider) evt.getSource();
                if (!slider.getValueIsAdjusting()) {
                    int value = slider.getValue();
                    for(int i = 10;i <= 100;i++){
                        if(value == i){
                            jLabel1.setText("Size : " + value+"*"+value);
                            field.setSizetree((double)600/(double)value);
                            field.setNumTree(value);
                            repaint();
                        }
                    }
                    field.setNumTree(value);
                    //add(forest);
                    field.repaint();
                    //System.out.println(value);
                    //JOptionPane.showMessageDialog(null, "Forest with"+ value*value + "Trees");
                }
            }
        });

        jSlider2.setOpaque(false);
        jSlider2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jSlider2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jSlider2MouseExited(evt);
            }
        });
        getContentPane().add(jSlider2);
        jSlider2.setBounds(830, 520, 200, 26);
        jSlider2.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                JSlider slider = (JSlider) evt.getSource();
                if (!slider.getValueIsAdjusting()) {
                    int value = slider.getValue();
                    b.setSpeed(value);
                    if(value < 10){
                        jLabel3.setText("Speed : 0.00" + value + " second/action");
                    }else if(value < 100){
                        jLabel3.setText("Speed : 0.0" + value + " second/action");
                    }else if(value < 1000){
                        jLabel3.setText("Speed : 0." + value + " second/action");
                    }else{
                        jLabel3.setText("Speed : 1.000 second/action");
                    }
                }
            }
        }
    );

    autoplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Autoplayoff_default.png"))); // NOI18N
    autoplay.setText("Autoplayoff_default");
    autoplay.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            autoplayMouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            autoplayMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            autoplayMouseExited(evt);
        }
    });
    getContentPane().add(autoplay);
    autoplay.setBounds(610, 170, 120, 40);

    Start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/start_default.png"))); // NOI18N
    Start.setText("Start");
    Start.setToolTipText("");
    Start.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            StartMouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            StartMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            StartMouseExited(evt);
        }
    });
    getContentPane().add(Start);
    Start.setBounds(610, 30, 90, 40);

    Regrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Regrow_default.png"))); // NOI18N
    Regrow.setText("Regrow");
    Regrow.setToolTipText("");
    Regrow.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            RegrowMouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            RegrowMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            RegrowMouseExited(evt);
        }
    });
    getContentPane().add(Regrow);
    Regrow.setBounds(610, 100, 90, 40);

    SetProbFire.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/SetProbFire_default.png"))); // NOI18N
    SetProbFire.setText("SetProbFire");
    SetProbFire.setToolTipText("");
    SetProbFire.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            SetProbFireMouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            SetProbFireMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            SetProbFireMouseExited(evt);
        }
    });
    getContentPane().add(SetProbFire);
    SetProbFire.setBounds(640, 280, 100, 40);

    GrowNewForest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/GrowNewForest_default.png"))); // NOI18N
    GrowNewForest.setText("GrowNewForest_default");
    GrowNewForest.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            GrowNewForestMouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            GrowNewForestMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            GrowNewForestMouseExited(evt);
        }
    });
    getContentPane().add(GrowNewForest);
    GrowNewForest.setBounds(800, 130, 170, 40);

    jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel1.setText("Size : 100*100");
    getContentPane().add(jLabel1);
    jLabel1.setBounds(620, 480, 200, 23);

    jLabel2.setBackground(new java.awt.Color(153, 255, 255));
    jLabel2.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
    jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel2.setText("");
    jLabel2.setOpaque(true);
    getContentPane().add(jLabel2);
    jLabel2.setBounds(0, 600, 600, 35);

    jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
    jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel3.setText("Speed : 0.100 second/action");
    getContentPane().add(jLabel3);
    jLabel3.setBounds(830, 480, 200, 23);

    jLabel4.setFont(new java.awt.Font("Tempus Sans ITC", 0, 16)); // NOI18N
    jLabel4.setForeground(new java.awt.Color(255, 255, 51));
    jLabel4.setText("ProbTree :");
    getContentPane().add(jLabel4);
    jLabel4.setBounds(770, 50, 70, 20);

    jLabel5.setFont(new java.awt.Font("Tempus Sans ITC", 0, 16)); // NOI18N
    jLabel5.setForeground(new java.awt.Color(255, 255, 51));
    jLabel5.setText("ProbTreeBurn :");
    getContentPane().add(jLabel5);
    jLabel5.setBounds(770, 90, 100, 24);

    jLabel7.setFont(new java.awt.Font("Tempus Sans ITC", 0, 20)); // NOI18N
    jLabel7.setText("Version 1.0");
    getContentPane().add(jLabel7);
    jLabel7.setBounds(950, 600, 100, 30);

    jLabel8.setFont(new java.awt.Font("Tempus Sans ITC", 0, 24)); // NOI18N
    jLabel8.setForeground(new java.awt.Color(0, 0, 153));
    jLabel8.setText("ProbFire :");
    getContentPane().add(jLabel8);
    jLabel8.setBounds(770, 285, 110, 30);

    jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/background_slider.png"))); // NOI18N
    jLabel9.setText("jLabel9");
    getContentPane().add(jLabel9);
    jLabel9.setBounds(620, 460, 410, 120);

    jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/probFire_bg.png"))); // NOI18N
    getContentPane().add(jLabel10);
    jLabel10.setBounds(610, 220, 420, 170);

    jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/background.png"))); // NOI18N
    jLabel11.setText("jLabel11                                                                                                         sdf");
    getContentPane().add(jLabel11);
    jLabel11.setBounds(620, 370, 400, 90);

    jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Forest_bg.png"))); // NOI18N
    getContentPane().add(jLabel12);
    jLabel12.setBounds(730, 20, 310, 190);

    jButton1.setBackground(new java.awt.Color(204, 255, 204));
    jButton1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18)); // NOI18N
    jButton1.setText("Help");
    jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jButton1MouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            jButton1MouseExited(evt);
        }
    });
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });
    getContentPane().add(jButton1);
    jButton1.setBounds(840, 600, 90, 30);

    pack();
    }// </editor-fold>//GEN-END:initComponents
  
    private void RegrowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegrowMouseClicked
        forest = new Forest(field);
        Timeclass tc = new Timeclass(count,Regrow);
        timer = new Timer(100,tc);
        timer.start();
        probfire = 0;
        probtree = 0;
        probtreeburn = 0;
        field.reset();
        textprobfire.setText("");
        textprobtree.setText("");
        textprobtreeburn.setText("");
        Regrow.setText("Regrow_over");
        Regrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Regrow_press.png")));
        repaint();
    }//GEN-LAST:event_RegrowMouseClicked

    private void RegrowMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegrowMouseEntered
        jLabel2.setText("Regrow trees");
        Regrow.setText("Regrow_over");
        Regrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Regrow_over.png")));
    }//GEN-LAST:event_RegrowMouseEntered

    private void RegrowMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegrowMouseExited
        jLabel2.setText("");
        Regrow.setText("Regrow_default");
        Regrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Regrow_default.png")));
    }//GEN-LAST:event_RegrowMouseExited

    private void StartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartMouseClicked
        Timeclass tc = new Timeclass(count,Start);
        timer = new Timer(100,tc);
        if(getProbfire() == 0){
            JOptionPane.showMessageDialog(null, "Probfire not found. Insert number between 0-1.", "PROBFIRE NOT FOUND", JOptionPane.INFORMATION_MESSAGE, imgmsgbox);
        }else{
            Thread t = new Thread(){
            public void run(){
                if(step == true){
                    b.run();
                    repaint();
                }else{
                    b.step();
                }
            }
        };
        t.start();
        }
        timer.start();
        Start.setText("Start_over");
        Start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/start_press.png")));
    }//GEN-LAST:event_StartMouseClicked

    private void StartMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartMouseEntered
        jLabel2.setText("Start Burn Forest");
        Start.setText("Start_over");
        Start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Start_over.png")));
    }//GEN-LAST:event_StartMouseEntered

    private void StartMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartMouseExited
        jLabel2.setText("");
        Start.setText("Start_default");
        Start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Start_default.png")));
    }//GEN-LAST:event_StartMouseExited

    private void SetProbFireMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SetProbFireMouseClicked
        Timeclass tc = new Timeclass(count,SetProbFire);
        timer = new Timer(100,tc);
        try{
            probfire = Double.parseDouble(textprobfire.getText());
            if(textprobfire.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Probfire not found. Insert number between 0-1.", "PROBFIRE NOT FOUND", JOptionPane.INFORMATION_MESSAGE, imgmsgbox);
            }
            
            if(probfire > 1 || probfire < 0){
                textprobfire.setText("");
                JOptionPane.showMessageDialog(null, "Insert number between 0-1.", "INVALID AMOUNT OF NUBMER", JOptionPane.INFORMATION_MESSAGE, imgmsgbox);
            }
            
        }catch(Exception e){
            textprobfire.setText("");
            JOptionPane.showMessageDialog(null, "Invalid type of input. Only number between 0-1.", "INVALID TYPE OF INPUT", JOptionPane.INFORMATION_MESSAGE, imgmsgbox);
        }
        timer.start();
        SetProbFire.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/SetProbFire_press.png")));
        SetProbFire.setText("SetProbFire_over");
    }//GEN-LAST:event_SetProbFireMouseClicked

    private void SetProbFireMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SetProbFireMouseEntered
        jLabel2.setText("Set probability of spreadfire rate. Input number between 0 and 1");
        SetProbFire.setText("SetProbFire_over");
        SetProbFire.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/SetProbFire_over.png")));
    }//GEN-LAST:event_SetProbFireMouseEntered

    private void SetProbFireMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SetProbFireMouseExited
        jLabel2.setText("");
        SetProbFire.setText("SetProbFire_default");
        SetProbFire.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/SetProbFire_default.png")));
    }//GEN-LAST:event_SetProbFireMouseExited

    private void autoplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_autoplayMouseClicked
        Timeclass tc = new Timeclass(count,autoplay);
        timer = new Timer(100,tc);
            if(autoplay.getText() == "Autoplayoff_over"){
                timer.start();
                autoplay.setText("Autoplayon_over");
                autoplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Autoplayoff_press.png")));
                step = true;
            }else if(autoplay.getText() == "Autoplayon_over"){
                timer.start();
                autoplay.setText("Autoplayoff_over");
                autoplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Autoplayon_press.png")));
                step = false;
            }
    }//GEN-LAST:event_autoplayMouseClicked

    private void autoplayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_autoplayMouseEntered
        jLabel2.setText("Select this to make forest automatic burn");
        
        if(autoplay.getText() == "Autoplayon_default"){
            autoplay.setText("Autoplayon_over");
            autoplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Autoplayon_over.png")));
        }else if(autoplay.getText() == "Autoplayoff_default"){
            autoplay.setText("Autoplayoff_over");
            autoplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Autoplayoff_over.png")));
        }
        else{
        }
    }//GEN-LAST:event_autoplayMouseEntered

    private void autoplayMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_autoplayMouseExited
        jLabel2.setText("");
        
        if(autoplay.getText() == "Autoplayon_over"){
            autoplay.setText("Autoplayon_default");
            autoplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Autoplayon_default.png")));
        }else if(autoplay.getText() == "Autoplayoff_over"){
            autoplay.setText("Autoplayoff_default");
            autoplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Autoplayoff_default.png")));
        }
    }//GEN-LAST:event_autoplayMouseExited

    private void GrowNewForestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrowNewForestMouseClicked
        Timeclass tc = new Timeclass(count,GrowNewForest);
        timer = new Timer(100,tc);
        try{
            probtree = Double.parseDouble(textprobtree.getText());
            probtreeburn = Double.parseDouble(textprobtreeburn.getText());
            if(probtree < 0){
                JOptionPane.showMessageDialog(null, "Probability can't be minus number. Now, probtree = 0.0", "INVALID AMOUNT OF NUBMER", JOptionPane.INFORMATION_MESSAGE, imgmsgbox);
                textprobtree.setText("0.0");
            }else if(probtree > 1){
                JOptionPane.showMessageDialog(null, "Probability can't be more than 1. Now, probtree = 1.0", "INVALID AMOUNT OF NUBMER", JOptionPane.INFORMATION_MESSAGE, imgmsgbox);
                textprobtree.setText("1.0");
            }
            if(probtreeburn < 0){
                JOptionPane.showMessageDialog(null, "Probability can't be minus number. Now, probtreeburn = 0.0", "INVALID AMOUNT OF NUBMER", JOptionPane.INFORMATION_MESSAGE, imgmsgbox);
                textprobtreeburn.setText("0.0");
            }else if(probtreeburn > 1){
                JOptionPane.showMessageDialog(null, "Probability can't be more than 1. Now, probtreeburn = 1.0", "INVALID AMOUNT OF NUBMER", JOptionPane.INFORMATION_MESSAGE, imgmsgbox);
                textprobtreeburn.setText("1.0");
            }
            field.createtreefromprob();
            repaint();
        }catch(Exception e){
            textprobtree.setText("");
            textprobtreeburn.setText("");
            JOptionPane.showMessageDialog(null, "Invalid type of input. Insert number between 0-1.", "INVALID TYPE OF INPUT", JOptionPane.INFORMATION_MESSAGE, imgmsgbox);
            field.reset();
            repaint();
        }
        timer.start();
        GrowNewForest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/GrowNewForest_press.png")));
        GrowNewForest.setText("GrowNewForest_over");
    }//GEN-LAST:event_GrowNewForestMouseClicked

    private void GrowNewForestMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrowNewForestMouseEntered
       jLabel2.setText("Create new forest with probability tree and burn. Input number between 0 and 1");
       GrowNewForest.setText("GrowNewForest_over");
       GrowNewForest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/GrowNewForest_over.png")));
    }//GEN-LAST:event_GrowNewForestMouseEntered

    private void GrowNewForestMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrowNewForestMouseExited
       jLabel2.setText("");
       GrowNewForest.setText("GrowNewForest_default");
       GrowNewForest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/GrowNewForest_default.png")));
    }//GEN-LAST:event_GrowNewForestMouseExited

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Desktop.getDesktop().browse(new URL("https://github.com/LibopZ/csc319-repository-group-14/wiki/User-Manual").toURI());
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jSlider1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider1MouseEntered
        jLabel2.setText("Slide to select density of tree in forest");
    }//GEN-LAST:event_jSlider1MouseEntered

    private void jSlider1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider1MouseExited
        jLabel2.setText("");
    }//GEN-LAST:event_jSlider1MouseExited

    private void jSlider2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider2MouseEntered
        jLabel2.setText("Slide to select speed of spread fire");
    }//GEN-LAST:event_jSlider2MouseEntered

    private void jSlider2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider2MouseExited
        jLabel2.setText("");
    }//GEN-LAST:event_jSlider2MouseExited

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        jLabel2.setText("Click to open user manual");
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        jLabel2.setText("");
    }//GEN-LAST:event_jButton1MouseExited
    
    private class Timeclass implements ActionListener{
        double counter;
        JLabel label;
        
        public Timeclass(double counter,JLabel label){
            this.counter = counter;
            this.label = label;
        }
            
        public void actionPerformed(java.awt.event.ActionEvent tc){
            counter --;
            if(counter >= 1){
                label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/" +label.getText()+".png")));
            }else{
                timer.stop();
                label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/"+label.getText() +".png")));
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Jframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel GrowNewForest;
    private javax.swing.JLabel Regrow;
    private javax.swing.JLabel SetProbFire;
    private javax.swing.JLabel Start;
    private javax.swing.JLabel autoplay;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JTextField textprobfire;
    private javax.swing.JTextField textprobtree;
    private javax.swing.JTextField textprobtreeburn;
    // End of variables declaration//GEN-END:variables

    public double getProbtree() {
        return probtree;
    }

    public double getProbtreeburn() {
        return probtreeburn;
    }
    
    public double getProbfire() {
        return probfire;
    }
    
}
